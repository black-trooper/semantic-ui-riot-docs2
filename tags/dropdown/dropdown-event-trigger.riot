<dropdown-event-trigger>
  <section>
    <div class="ui segment secondary top attached example">
      Example
      <i class="icon code" onclick="{ toggleExample }"></i>
    </div>
    <div class="ui segment bottom attached">
      <su-dropdown items="{ dropdownItems }" onselect="{ onSelect }" onchange="{ onChange }"></su-dropdown>
      <div class="ui message">
        <ul>
          <li each="{ item in singleMessage }">{ item }</li>
        </ul>
      </div>
    </div>
    <div class="ui segment bottom attached inverted transition hidden">
      <pre class="language-markup"><code>
      <su-dropdown items="{ dropdownItems }" onselect="{ onSelect }" onchange="{ onChange }"></su-dropdown>
        <div class="ui message">
          <ul>
            <li each="{ item in singleMessage }">{ item }</li>
          </ul>
        </div>

        <script>
          export default {
            dropdownItems: [
              {
                label: 'Gender',
                value: null,
                default: true
              },
              {
                label: 'Male',
                value: 1
              },
              {
                label: 'Female',
                value: 2
              },
            ],

            singleMessage: [],
            onSelect(target) {
              this.singleMessage.push(`Selected. label: ${target.label}, value: ${target.value}`)
              this.update()
            },
            onChange(target) {
              this.singleMessage.push(`Changed. label: ${target.label}, value: ${target.value}`)
              this.update()
            }
          }
        </script>
      </code></pre>
    </div>
  </section>

  <script>
    export default {
      dropdownItems: [
        {
          label: 'Gender',
          value: null,
          default: true
        },
        {
          label: 'Male',
          value: 1
        },
        {
          label: 'Female',
          value: 2
        }
      ],

      singleMessage: [],
      onSelect(target) {
        this.singleMessage.push(`Selected. label: ${target.label}, value: ${target.value}`)
        this.update()
      },
      onChange(target) {
        this.singleMessage.push(`Changed. label: ${target.label}, value: ${target.value}`)
        this.update()
      }
    }
  </script>
</dropdown-event-trigger>